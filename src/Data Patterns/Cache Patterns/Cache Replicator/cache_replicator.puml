@startuml

interface ICache {
    + get (key): any | undefined
    + put (key, value): any
    + has (key): boolean
    + remove (key): void
    + clear (): void
}

class Cache {

}

class ReplicatedCache {
    - cache
    - observers[]
    + register (observer)
}

interface IChangesObserver {
    + put (event)
    + removed (event)
    + cleared (event)
}

class ReplicatorObserver {
    - cache
}

interface IEvent {

}

class PutEvent {
    + key: string
    + value: any
}

class RemovedEvent {
    + key: string
}

class ClearedEvent {
}

ICache <|.. Cache
ICache <|.. ReplicatedCache

ReplicatedCache o--> Cache
ReplicatedCache "0" o--> "*" IChangesObserver
ReplicatedCache ..> IEvent

IChangesObserver <|.. ReplicatorObserver
IChangesObserver ..> IEvent

ReplicatorObserver o-- Cache

IEvent <|.. PutEvent
IEvent <|.. RemovedEvent
IEvent <|.. ClearedEvent

@enduml
